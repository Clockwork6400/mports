--- meson.build.orig	2021-03-20 15:25:18.081550000 -0400
+++ meson.build	2021-03-20 15:28:25.653941000 -0400
@@ -426,7 +426,7 @@
 
 # on aarch64 error: -fstack-protector not supported for this target
 if host_machine.cpu_family() != 'aarch64'
-  if host_machine.system() in [ 'linux', 'freebsd', 'windows' ]
+  if host_machine.system() in [ 'linux', 'freebsd', 'windows', 'midnightbsd' ]
     # we prefer -fstack-protector-strong but fallback to -fstack-protector-all
     fstack_cflags = cc.first_supported_argument([
       '-fstack-protector-strong',
@@ -712,6 +712,11 @@
   headers += 'libutil.h'
 endif
 
+if host_machine.system() == 'midnightbsd'
+  headers += 'libutil.h'
+endif
+
+
 foreach name : headers
   if cc.has_header(name)
     conf.set('WITH_@0@'.format(name.underscorify().to_upper()), 1)
@@ -901,6 +906,11 @@
   required_programs += 'ifconfig'
 endif
 
+if host_machine.system() == 'midnightbsd'
+  required_programs += 'ifconfig'
+endif
+
+
 foreach name : required_programs
   prog = find_program(name, required: true, dirs: libvirt_sbin_path)
   varname = name.underscorify()
@@ -1058,6 +1068,8 @@
 # Check for BSD kvm (kernel memory interface)
 if host_machine.system() == 'freebsd'
   libkvm_dep = cc.find_library('kvm')
+elif host_machine.system() == 'midnightbsd'
+  libkvm_dep = cc.find_library('kvm')
 else
   libkvm_dep = dependency('', required: false)
 endif
@@ -1465,7 +1477,7 @@
   endif
 endif
 
-if host_machine.system() != 'freebsd'
+if host_machine.system() not in [ 'freebsd',  'midnightbsd' ]
   if not get_option('firewalld').disabled()
     conf.set('WITH_FIREWALLD', 1)
   endif
@@ -1489,7 +1501,7 @@
 # build driver options
 
 if get_option('driver_remote').enabled()
-  if not xdr_dep.found() and host_machine.system() not in [ 'freebsd', 'darwin' ]
+  if not xdr_dep.found() and host_machine.system() not in [ 'freebsd', 'darwin', 'midnightbsd' ]
     error('XDR is required for remote driver')
   endif
   conf.set('WITH_REMOTE', 1)
@@ -1520,7 +1532,7 @@
   endif
 endif
 
-if not get_option('driver_bhyve').disabled() and host_machine.system() == 'freebsd'
+if not get_option('driver_bhyve').disabled() and host_machine.system() in [ 'freebsd', 'midnightbsd' ]
   bhyve_prog = find_program('bhyve', required: get_option('driver_bhyve'))
   bhyvectl_prog = find_program('bhyvectl', required: get_option('driver_bhyve'))
   bhyveload_prog = find_program('bhyveload', required: get_option('driver_bhyve'))
@@ -1680,7 +1692,7 @@
     endif
     conf.set_quoted('QEMU_MODDIR', qemu_moddir)
 
-    if host_machine.system() in ['freebsd', 'darwin']
+    if host_machine.system() in ['freebsd', 'darwin', 'midnightbsd']
       default_qemu_user = 'root'
       default_qemu_group = 'wheel'
     else
