--- configure.in.orig	2019-10-13 11:55:57.063266000 -0400
+++ configure.in	2019-10-13 11:57:15.191977000 -0400
@@ -1080,7 +1080,7 @@
 ])
 
 AS_CASE(["$target_os"],
-[freebsd*], [
+[freebsd*], [
   AC_CACHE_CHECK([whether pthread should be enabled by default],
     rb_cv_enable_pthread_default,
     [AC_TRY_CPP([
@@ -1323,7 +1323,7 @@
 		AC_DEFINE(BROKEN_SETREUID, 1)
 		AC_DEFINE(BROKEN_SETREGID, 1)
                 ac_cv_sizeof_rlim_t=8],
-[freebsd*], [	LIBS="-lm $LIBS"
+[midnightbsd*|freebsd*], [	LIBS="-lm $LIBS"
 		ac_cv_func_getpeername=no
 		ac_cv_func_getsockname=no
 		ac_cv_func_shutdown=no
@@ -2300,7 +2300,7 @@
 	rb_cv_broken_glibc_ia64_erfc=no)])
 AS_CASE([$rb_cv_broken_glibc_ia64_erfc],[yes],[ac_cv_func_erf=no])
 
-AS_CASE(["$target_os"],[freebsd*],[
+AS_CASE(["$target_os"],[midnightbsd*|freebsd*],[
 	 AC_DEFINE(BROKEN_CLOSE)
 	 AC_REPLACE_FUNCS(close)
 	 ])
@@ -3419,7 +3419,7 @@
 			XLDFLAGS="$XLDFLAGS -Wl,-E"
 			LIBPATHFLAG=" -L%1\$-s"
 			rb_cv_dlopen=yes],
-	[freebsd*|dragonfly*], [
+	[midnightbsd*|freebsd*|dragonfly*], [
 			: ${LDSHARED='$(CC) -shared'}
 			if test "$rb_cv_binary_elf" = yes; then
 			    LDFLAGS="$LDFLAGS -rdynamic"
@@ -3529,7 +3529,7 @@
 fi
 
 AS_CASE(["$target_os"],
-[freebsd*], [
+[midnightbsd*|freebsd*], [
     AC_CHECK_LIB([procstat], [procstat_open_sysctl])
     if test "x$ac_cv_lib_procstat_procstat_open_sysctl" = xyes; then
 	AC_CHECK_FUNCS(procstat_getvmmap)
@@ -3542,7 +3542,7 @@
 	AC_CHECK_LIB([execinfo], [backtrace])
 	AC_CHECK_HEADERS([libunwind.h])
     fi],
-[*-freebsd*|x86_64-netbsd*], [
+[*-midnightbsd*|*-freebsd*|x86_64-netbsd*], [
     AC_CHECK_HEADERS([execinfo.h])
     if test "x$ac_cv_header_execinfo_h" = xyes; then
 	AC_CHECK_LIB([execinfo], [backtrace])
@@ -3870,30 +3870,7 @@
   libdir_basename="${libdir_basename}"${multiarch+'/${arch}'}
 
   AS_CASE(["$target_os"],
-    [freebsd*|dragonfly*], [],
-    [
-     if test "$GCC" = yes; then
-       RUBY_TRY_LDFLAGS([${linker_flag}--no-undefined], [no_undefined=yes], [no_undefined=no])
-       if test "no_undefined" = yes; then
-	  RUBY_APPEND_OPTION(EXTLDFLAGS, [${linker_flag}--no-undefined])
-       fi
-     fi
-    ])
-
-  AS_CASE(["$target_os"],
-    [sunos4*], [
-	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR) lib$(RUBY_SO_NAME).so'
-	],
-    [linux* | gnu* | k*bsd*-gnu | atheos* | kopensolaris*-gnu | haiku*], [
-	RUBY_APPEND_OPTIONS(LIBRUBY_DLDFLAGS, ['-Wl,-soname,lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR)' "$LDFLAGS_OPTDIR"])
-	LIBRUBY_ALIASES='lib$(RUBY_SO_NAME).so.$(MAJOR).$(MINOR) lib$(RUBY_SO_NAME).so'
-	if test "$load_relative" = yes; then
-	    libprefix="'\$\${ORIGIN}/../${libdir_basename}'"
-	    LIBRUBY_RPATHFLAGS="-Wl,-rpath,${libprefix}"
-	    LIBRUBY_RELATIVE=yes
-	fi
-	],
-    [freebsd*|dragonfly*], [
+    [midnightbsd*|freebsd*|dragonfly*], [
 	SOLIBS='$(LIBS)'
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).so.$(MAJOR)$(MINOR)'
 	RUBY_APPEND_OPTIONS(LIBRUBY_DLDFLAGS, ['-Wl,-soname,${LIBRUBY_SO}'])
@@ -4061,7 +4038,7 @@
 	DTRACE_REBUILD=yes
 	LIBRUBY_A_OBJS='$(DTRACE_GLOMMED_OBJ)'
     ])
-    AS_CASE("${target_os}", [freebsd*], [dnl
+    AS_CASE("${target_os}", [midnightbsd*|freebsd*], [dnl
         # FreeBSD's dtrace requires libelf
         LIBS="-lelf $LIBS"
     ])
