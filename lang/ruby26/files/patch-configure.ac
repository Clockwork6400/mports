--- configure.ac.orig	2019-01-17 17:07:55.000000000 -0500
+++ configure.ac	2019-10-13 12:04:23.098670000 -0400
@@ -750,7 +750,7 @@
 ])
 
 AS_CASE(["$target_os"],
-[freebsd*], [
+[freebsd*], [
   AC_CACHE_CHECK([whether pthread should be enabled by default],
     rb_cv_enable_pthread_default,
     [AC_TRY_CPP([
@@ -990,7 +990,7 @@
 		AC_DEFINE(BROKEN_SETREUID, 1)
 		AC_DEFINE(BROKEN_SETREGID, 1)
                 ac_cv_sizeof_rlim_t=8],
-[freebsd*], [	LIBS="-lm $LIBS"
+[midnightbsd*|freebsd*], [	LIBS="-lm $LIBS"
 		ac_cv_func_getpeername=no
 		ac_cv_func_getsockname=no
 		ac_cv_func_shutdown=no
@@ -1712,7 +1712,7 @@
 	rb_cv_broken_glibc_ia64_erfc=no)])
 AS_CASE([$rb_cv_broken_glibc_ia64_erfc],[yes],[ac_cv_func_erf=no])
 
-AS_CASE(["$target_os"],[freebsd*],[
+AS_CASE(["$target_os"],[midnightbsd*|freebsd*],[
 	 AC_DEFINE(BROKEN_CLOSE)
 	 AC_REPLACE_FUNCS(close)
 	 ])
@@ -2675,11 +2675,11 @@
 			XLDFLAGS="$XLDFLAGS -Wl,-E"
 			LIBPATHFLAG=" -L%1\$-s"
 			rb_cv_dlopen=yes],
-	[freebsd*|dragonfly*], [
+	[midnightbsd*|freebsd*|dragonfly*], [
 			: ${LDSHARED='$(CC) -shared'}
 			AS_IF([test "$rb_cv_binary_elf" = yes], [
 			    LDFLAGS="$LDFLAGS -rdynamic"
-			    DLDFLAGS="$DLDFLAGS "'-Wl,-soname,$@'
+			    DLDFLAGS="$DLDFLAGS "'-Wl,-E'
 			], [
 			  test "$GCC" = yes && test "$rb_cv_prog_gnu_ld" = yes || LDSHARED='$(LD) -Bshareable'
 			])
@@ -2790,7 +2790,7 @@
 ])
 
 AS_CASE(["$target_os"],
-[freebsd*], [
+[midnightbsd*|freebsd*], [
     AC_CHECK_LIB([procstat], [procstat_open_sysctl])
     AS_IF([test "x$ac_cv_lib_procstat_procstat_open_sysctl" = xyes], [
 	AC_CHECK_FUNCS(procstat_getvmmap)
@@ -2803,7 +2803,7 @@
 	AC_CHECK_LIB([execinfo], [backtrace])
 	AC_CHECK_HEADERS([libunwind.h])
     ])],
-[*-freebsd*|x86_64-netbsd*], [
+[*-midnightbsd*|*-freebsd*|x86_64-netbsd*], [
     AC_CHECK_HEADERS([execinfo.h])
     AS_IF([test "x$ac_cv_header_execinfo_h" = xyes], [
 	AC_CHECK_LIB([execinfo], [backtrace])
@@ -3138,7 +3138,7 @@
   libdir_basename="${libdir_basename}"${multiarch+'/${arch}'}
 
   AS_CASE(["$target_os"],
-    [freebsd*|dragonfly*], [],
+    [midnightbsd*|freebsd*|dragonfly*], [],
     [
      AS_IF([test "$GCC" = yes], [
        RUBY_TRY_LDFLAGS([${linker_flag}--no-undefined], [no_undefined=yes], [no_undefined=no])
@@ -3161,9 +3161,10 @@
 	    LIBRUBY_RELATIVE=yes
 	])
 	],
-    [freebsd*|dragonfly*], [
+    [midnightbsd*|freebsd*|dragonfly*], [
 	LIBRUBY_SO='lib$(RUBY_SO_NAME).$(SOEXT).$(MAJOR)$(MINOR)'
 	LIBRUBY_SONAME='$(LIBRUBY_SO)'
+	RUBY_APPEND_OPTIONS(LIBRUBY_DLDFLAGS, ['-Wl,-soname,${LIBRUBY_SO}'])
 	AS_IF([test "$rb_cv_binary_elf" != "yes" ], [
 	    LIBRUBY_SO="$LIBRUBY_SO.\$(TEENY)"
 	    LIBRUBY_ALIASES=''
@@ -3315,7 +3316,7 @@
 	DTRACE_REBUILD=yes
 	LIBRUBY_A_OBJS='$(DTRACE_GLOMMED_OBJ)'
     ])
-    AS_CASE("${target_os}", [freebsd*], [dnl
+    AS_CASE("${target_os}", [midnightbsd*|freebsd*], [dnl
         # FreeBSD's dtrace requires libelf
         LIBS="-lelf $LIBS"
     ])
